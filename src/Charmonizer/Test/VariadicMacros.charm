#define CHAZ_USE_SHORT_NAMES

#include "_charm_test.h"
#include "string.h"
#include "Charmonizer/Test/TestHandler.h"

void 
chaz_TestHand_test_VariadicMacros(int *num_tests, int *num_passed, 
                                  int *num_failed, int *num_skipped)
{
    int test_num  = 0;
    *num_tests    = 3;
    *num_passed   = 0;
    *num_failed   = 0;
    *num_skipped  = *num_tests;
    char buf[10];
    chaz_bool_t really_has_var_macs = false;
    int i;

#ifndef HAS_VARIADIC_MACROS
  #if defined(HAS_ISO_VARIADIC_MACROS) || defined(HAS_GNUC_VARIADIC_MACROS)
    Assert_True(0, "#defines agree");
  #else 
    Assert_True(1, "#defines agree");
    Skip_Remaining("No variadic macro support");
  #endif
#endif

#ifdef HAS_ISO_VARIADIC_MACROS
 #define ISO_TEST(buffer, fmt, ...) \
    sprintf(buffer, fmt, __VA_ARGS__)
    really_has_var_macs = true;
    ISO_TEST(buf, "%s", "iso");
    Assert_True((strncmp(buf, "iso", 3) == 0), "ISO variadic macros work");
#else
    Skip("No ISO variadic macros");
#endif

#ifdef HAS_GNUC_VARIADIC_MACROS
 #define GNU_TEST(buffer, fmt, args...) \
    sprintf(buffer, fmt, ##args )
    really_has_var_macs = true;
    GNU_TEST(buf, "%s", "gnu");
    Assert_True((strncmp(buf, "gnu", 3) == 0), "GNUC variadic macros work");
#else
    Skip("No GNUC variadic macros");
#endif

    Assert_True(really_has_var_macs, "either ISO or GNUC");
}

/**
 * Copyright 2006 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

