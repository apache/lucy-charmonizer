#define CHAZ_USE_SHORT_NAMES

#include <string.h>
#include "Charmonizer/Compilers.h"

#include "Charmonizer/Core.h"
#include "Charmonizer/Util.h"

CC_compiler_t CC_compiler = CC_unknown;

typedef struct CC_compiler_details {
    CC_compiler_t compiler;
    char *o_flag;
    char *i_flag;
} CC_compiler_details;

CC_compiler_details details[] = {
    { CC_MSVC, "/Fo", "/I" },
    { CC_GCC, "-o ", "-I" },
    { CC_unknown, "", "" }
};

void
chaz_CC_detect() 
{
    int i;
#ifdef __GNUC__
    CC_compiler = CC_GCC;
#elif defined(_MSC_VER)
    CC_compiler = CC_MSVC;
#else
    #error "Couldn't detect a supported compiler"
#endif

    for (i = 0; details[i].compiler != CC_unknown; i++) {
        if ( details[i].compiler == CC_compiler ) 
        {
            object_flag  = strdup(details[i].o_flag);
            include_flag = strdup(details[i].i_flag);
            return;
        }
    }

    die("Couldn't find compiler details in details[] array");
}


/**
 * Copyright 2006 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

