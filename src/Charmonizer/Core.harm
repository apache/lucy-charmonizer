/* Chaz/Core.h -- symbols used by modules in the Charmonizer core distro.
 */

#ifndef H_CHAZ_CORE
#define H_CHAZ_CORE 1

#include <stdio.h>
#include <stddef.h>

typedef int chaz_bool_t;
#ifndef true
# define true 1
# define false 0
#endif

/* Temporary files used by Charmonizer. 
 */
#define CHAZ_CORE_TRY_SOURCE_PATH  "_charmonizer_try.c"
#define CHAZ_CORE_TRY_APP_PATH     "_charmonizer_try"
#define CHAZ_CORE_TARGET_PATH      "_charmonizer_target"

/* Global variables.
 */
extern char *chaz_Core_compiler;
extern char *chaz_Core_constant_prefix;
extern char *chaz_Core_macro_prefix;
extern char *chaz_Core_typedef_prefix;
extern char *chaz_Core_function_prefix;

/* Attempt to compile the supplied source code.  If successful, capture the 
 * output of the program and return a pointer to a newly allocated buffer.
 * If the compilation fails, return NULL.  The length of the captured 
 * output will be placed into the buffer pointed to by [output_len].
 */
char*
chaz_Core_capture_output(char *source, size_t source_len, size_t *output_len);

/* Read an entire file into memory.
 */
char* 
chaz_Core_slurp_file(char *file_path, size_t *len_ptr);

/* Get the length of a file (may overshoot on text files under DOS).
 */
long  
chaz_Core_flength(FILE *f);

/* Print an error message to stderr and exit.
 */
void  
chaz_Core_die(char *format, ...);

/* Print an error message to stderr.
 */
void
chaz_Core_warn(char *format, ...);

/* Attept to delete a file.  Don't error if the file wasn't there to begin
 * with.  Return 1 if it seems like the file is gone because an attempt to
 * open it for reading fails (this doesn't guarantee that the file is gone,
 * but it works well enough for our purposes).  Return 0 if we can still 
 * read the file.
 */
int
chaz_Core_remove_and_verify(char *file_path);

/* Attempt to open a file for reading, then close it immediately.
 */
int
chaz_Core_can_open_file(char *file_path);

/* Print a "chapter heading" when starting a module. 
 */
#define Chaz_Core_Start_Run(filehandle) \
    fprintf(filehandle, "\n/* %s */\n", __FILE__)

/* Leave a little whitespace at the end of each module.
 */
#define Chaz_Core_End_Run(filehandle) \
    fprintf(filehandle, "\n")

#ifdef CHAZ_USE_SHORT_NAMES
# define TRY_SOURCE_PATH        CHAZ_CORE_TRY_SOURCE_PATH
# define TRY_APP_PATH           CHAZ_CORE_TRY_APP_PATH
# define TARGET_PATH            CHAZ_CORE_TARGET_PATH
# define compiler               chaz_Core_compiler
# define constant_prefix        chaz_Core_constant_prefix
# define macro_prefix           chaz_Core_macro_prefix
# define typedef_prefix         chaz_Core_typedef_prefix
# define function_prefix        chaz_Core_function_prefix
# define capture_output         chaz_Core_capture_output 
# define slurp_file             chaz_Core_slurp_file 
# define flength                chaz_Core_flength 
# define die                    chaz_Core_die 
# define warn                   chaz_Core_warn 
# define remove_and_verify      chaz_Core_remove_and_verify 
# define can_open_file          chaz_Core_can_open_file 
# define Start_Run              Chaz_Core_Start_Run
# define End_Run                Chaz_Core_End_Run
#endif

#endif /* H_CHAZ_CORE */

/**
 * Copyright 2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

